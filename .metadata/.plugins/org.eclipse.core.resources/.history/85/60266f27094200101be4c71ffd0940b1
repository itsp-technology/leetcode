package day05;

import java.util.Stack;

public class BrothForce {

	public static void main(String[] args) {
		String s = "()";
	
		System.out.println(isValidBrackets(s));

	}
	public static boolean isValidBrackets(String s) {
        // Use a char array to simulate stack
        char[] stack = new char[s.length()];
        int top = -1; // this will act as the stack pointer
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            // Push opening brackets to stack
            if (c == '(' || c == '{' || c == '[') {
                stack[++top] = c;
            } else {
                // If no matching opening bracket
                if (top == -1) return false;
                char open = stack[top--]; // pop from stack
                // Check if it matches the corresponding open
                if ((c == ')' && open != '(') ||
                    (c == '}' && open != '{') ||
                    (c == ']' && open != '[')) {
                    return false;
                }
            }
        }

        // If stack is empty at the end, all brackets matched
        return top == -1;
    }
	
	public static boolean isValid(String s) {
        Stack<Character> stack = new Stack();
        for(char c : s.toCharArray()){
            if(c =='(' || c == '{' || c=='['){
                stack.push(c);
            }else{
                if(stack.isEmpty() || c == ')' && stack.pop() != '('
                    || c == '}' && stack.pop() != '{'
                    || c == ']' && stack.pop() != '[')
                    return false;
            }
        }
        return stack.isEmpty();
    }

}
